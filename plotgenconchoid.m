## -*- texinfo -*- 
## @deftypefn {} {@var{} =} plotgenconchoid (@var{gcPlotStruct}, @var{wantRays},
##     @var{rayIdxs})
##
## Plots in a plane a generalized conchoid by given its data structure in the
## variable @var{pcPlotStruct}.
##
## Input(s):
## The generalized planar conchoid (GPC) structure, composed by the following 
## fields.
##     F: Point coordiantes of the GPC focus.
##     curveXY : Coordinates (x,y) of the 'base curve' of the GPC. Is a matrix
##               of 2 x npts, the first row are the x-values and the second row
##               the y-vales.
##     conchInt: Coordinates (x,y) of the interior branch of the GPC. The matrix
##               is the same size and shape as the 'curveXY' coordinates.
##     conchExt: Coordinates (x,y) of the exterior branch of the GPC.
##     raysInt : Rays that connects the base curve with the interior branch GPC.
##     raysEnt : Rays that connects the base curve with the exterior branch GPC.
##     npts    : Number of points the base curve has been divided, an intenger
##               number.
## The GPC structure is generated by other functions. For the case of a line
## being the 'base curve' of the GPC, the function @fn{linegenconchoid} creates
## @var{gcPlotStruct} and for the case of an circular-arc being the 'base curve'
## the function @fn{circarcgenconchoid} is employed.
##
## A boolean variable 'wantRays', if true is also plotted the GPC rays. By
## default is set to false, because the there are as much rays as npts points.
##
## If it is wanted that every ray is numbered in the plot, then the user can
## specify a vector with the indexes whose rays is wanted to show.
##
## @seealso{linegenconchoid, circarcgenconchoid}
## @end deftypefn

## Author: Ludger O. Suarez-Burgoa <losuarezb@unal.edu.co>
## Created: 2022-02-17

function [] = plotgenconchoid (gcPlotStruct, wantRays=false, rayIdxs=NaN)

F = gcPlotStruct.F;
curveXY = gcPlotStruct.curveXY;
conchInt = gcPlotStruct.conchInt;
conchExt = gcPlotStruct.conchExt;
raysInt = gcPlotStruct.raysInt;
raysExt = gcPlotStruct.raysExt;
npts = gcPlotStruct.npts;

## Start Plotting.
hold on

# The focus,
plot(F(1), F(2), 'k+');

# The base curve,
plot(curveXY(1,:), curveXY(2,:), 'r-');

# Internal and external branchs of the conchoid,
plot(conchInt(1,:), conchInt(2,:), 'b-');
plot(conchExt(1,:), conchExt(2,:), 'm-');

# Internal and external rays of the conchoid,
if isnan(rayIdxs)
    rayIdxs = [1, npts];
endif
if wantRays
    [xxI, yyI] = gcPlotStruct.raysInt;
    [xxE, yyE] = gcPlotStruct.raysExt;
    plot(xxI(:, rayIdxs(1):rayIdxs(2)), yyI(:, rayIdxs(1):rayIdxs(2)), 'g-');
    plot(xxE(:, rayIdxs(1):rayIdxs(2)), yyE(:, rayIdxs(1):rayIdxs(2)), 'y-');
endif
endfunction

## Copyright (C) 2022 Ludger O. Suarez-Burgoa
## BSD-3 License.